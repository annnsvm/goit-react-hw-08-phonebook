{"version":3,"file":"static/js/560.8fdca7e3.chunk.js","mappings":"yQAGaA,EAAUC,EAAAA,EAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2CAIpBC,EAAUH,EAAAA,EAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iRAepBG,EAAYL,EAAAA,EAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kMAUrBK,EAAOP,EAAAA,EAAAA,KAAWQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,kIAOlBO,EAAQT,EAAAA,EAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,wKASpBS,EAAQX,EAAAA,EAAAA,MAAYY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,6RAepBW,EAAeb,EAAAA,EAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,8fAuB5Ba,EAAiBf,EAAAA,EAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,kMAU3Be,EAAiBjB,EAAAA,EAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,wIAe3BiB,GANenB,EAAAA,EAAAA,IAAUoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,mEAMbF,EAAAA,EAAAA,GAAOqB,EAAAA,GAAPrB,CAAesB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,+D,6BC3BxC,EAnEoB,WAAO,IAADqB,EAMlBC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,KAAC3B,EAAO,CAAA4B,UACNC,EAAAA,EAAAA,MAACzB,EAAO,CAAAwB,SAAA,EACND,EAAAA,EAAAA,KAACrB,EAAS,CAAAsB,SAAC,6BACXC,EAAAA,EAAAA,MAACrB,EAAI,CAACsB,SAlBM,SAAAC,GAAA,OAAAP,EAAAA,IAAAQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1BL,EAAEM,iBAEIL,EAAOD,EAAEO,cACflB,GACEmB,EAAAA,EAAAA,IAAM,CACJC,MAAOR,EAAKS,SAASD,MAAME,MAC3BC,SAAUX,EAAKS,SAASE,SAASD,SAIrCV,EAAKY,QAAQ,wBAAAV,EAAAW,OAAA,GAAAf,EAAA,MACdgB,MAAA,KAAAC,UAAA,EAMkCxB,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACjB,EAAK,CAAC2C,QAAQ,QAAOzB,SAAC,mBACvBD,EAAAA,EAAAA,KAACf,EAAK,CACJ0C,KAAK,QACLC,KAAK,QACLC,aAAa,QACbC,UAAQ,QAKZ5B,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAACjB,EAAK,CAAC2C,QAAQ,WAAUzB,SAAC,cAC1BD,EAAAA,EAAAA,KAACf,EAAK,CACJ0C,KAAK,WACLC,KAAK,WACLE,UAAQ,QAKZ9B,EAAAA,EAAAA,KAACb,EAAY,CAACyC,KAAK,SAAQ3B,SAAC,gBAG9BC,EAAAA,EAAAA,MAACb,EAAc,CAAAY,SAAA,CAAC,iBAEdD,EAAAA,EAAAA,KAACT,EAAc,CAAAU,UACbD,EAAAA,EAAAA,KAACP,EAAS,CAACsC,GAAG,YAAW9B,SAAC,qBAMtC,C","sources":["screens/LoginScreen/LoginScreen.styled.js","screens/LoginScreen/LoginScreen.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n`;\nexport const Content = styled.div`\n  position: fixed;\n  background: white;\n  width: 400px;\n  height: auto;\n  padding: 30px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 8px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n  max-width: 24rem;\n`;\nexport const FormTitle = styled.h2`\n  margin-top: 2.5rem;\n  color: #111827;\n  font-size: 1.5rem;\n  line-height: 2rem;\n  font-weight: 700;\n  letter-spacing: -0.025em;\n  line-height: 2.25rem;\n  text-align: center;\n`;\nexport const Form = styled.form`\n  margin-top: 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  gap: 1.25rem;\n  flex-direction: column;\n`;\nexport const Label = styled.label`\n  display: block;\n  color: #111827;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 500;\n  line-height: 1.5rem;\n  margin-bottom: 0.5rem;\n`;\nexport const Input = styled.input`\n  display: block;\n  padding: 0.375rem 0;\n  color: #111827;\n  width: 100%;\n  border-radius: 0.375rem;\n  border: 1px solid #d1d5db;\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n\n  @media (min-width: 640px) {\n    font-size: 0.875rem;\n    line-height: 1.25rem;\n  }\n`;\n\nexport const SubmitButton = styled.button`\n  display: flex;\n  padding-top: 0.375rem;\n  padding-bottom: 0.375rem;\n  padding-left: 0.75rem;\n  padding-right: 0.75rem;\n  background-color: #016bff;\n  color: #ffffff;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  font-weight: 600;\n  line-height: 1.5rem;\n  justify-content: center;\n  width: 100%;\n  border-radius: 0.375rem;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  cursor: pointer;\n  :hover {\n    background-color: #04009a;\n  }\n`;\n\nexport const ChangeFormText = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 2.5rem;\n  color: #6b7280;\n  font-size: 0.875rem;\n  line-height: 1.25rem;\n  text-align: center;\n`;\nexport const ChangeFormLink = styled.div`\n  color: #04009a;\n  font-weight: 600;\n  line-height: 1.5rem;\n  margin-left: 0.5rem;\n  :hover {\n    color: #04009a;\n  }\n`;\nexport const ErrorMessage = styled.div`\n  color: red;\n  font-size: 12px;\n  font-weight: 500;\n`;\n\nexport const LinkLogin = styled(NavLink)`\ncolor: #016BFF;\n:hover {\n  color: #04009A;\n}\n}\n`;\n","import React from 'react';\nimport {\n  Wrapper,\n  Content,\n  Form,\n  FormTitle,\n  Label,\n  Input,\n  SubmitButton,\n  ChangeFormText,\n  ChangeFormLink,\n  LinkLogin,\n} from './LoginScreen.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/Authorization/operations';\n\nconst LoginScreen = () => {\n  // const [formData, setFormData] = useState({\n  //   email: '',\n  //   password: '',\n  // });\n\n  const dispatch = useDispatch();\n\n  // const handleChange = e => {\n  //   const { name, value } = e.target;\n  //   setFormData(prevState => ({ ...prevState, [name]: value }));\n  // };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <Wrapper>\n      <Content>\n        <FormTitle>Sign in to your account</FormTitle>\n        <Form onSubmit={handleSubmit}>\n          <div>\n            <Label htmlFor=\"email\">Email address</Label>\n            <Input\n              name=\"email\"\n              type=\"email\"\n              autoComplete=\"email\"\n              required\n              // value={}\n            />\n          </div>\n\n          <div>\n            <Label htmlFor=\"password\">Password</Label>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              required\n              // value={formData.password}\n            />\n          </div>\n\n          <SubmitButton type=\"submit\">Sign in</SubmitButton>\n        </Form>\n\n        <ChangeFormText>\n          Not a member?\n          <ChangeFormLink>\n            <LinkLogin to=\"/register\">Sign up</LinkLogin>\n          </ChangeFormLink>\n        </ChangeFormText>\n      </Content>\n    </Wrapper>\n  );\n};\n\nexport default LoginScreen;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","FormTitle","_templateObject3","Form","_templateObject4","Label","_templateObject5","Input","_templateObject6","SubmitButton","_templateObject7","ChangeFormText","_templateObject8","ChangeFormLink","_templateObject9","LinkLogin","_templateObject10","NavLink","_templateObject11","_ref","dispatch","useDispatch","_jsx","children","_jsxs","onSubmit","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","form","wrap","_context","prev","next","preventDefault","currentTarget","logIn","email","elements","value","password","reset","stop","apply","arguments","htmlFor","name","type","autoComplete","required","to"],"sourceRoot":""}